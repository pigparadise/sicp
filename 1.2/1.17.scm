(define (double x) (* x 2))
(define (halve x) (/ x 2))
(define (mul-iter result a b)
  (cond ((= b 0) result)
        ((= b 1) (+ result a))
        ((even? b) (mul-iter result (double a) (halve b)))
        (else (mul-iter (+ result a) a (- b 1)))
  )
)
(define (mul a b)
  (mul-iter 0 a b)
)


(define (double x) (* x 2))
(define (halve x) (/ x 2))
(define (mul a b)
  (cond ((= b 0) 0)
        ((even? b) (mul (double a) (halve b)))
        (else (+ a (mul a (- b 1))))
  )
)

(newline)
(display (mul 3 4))(newline)
(display (mul 32 32))(newline)
